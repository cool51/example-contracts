{
	"id": "a06d4d79da69efbc6e7352409f3da253",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"to-be-completed/ProofOfExistence3.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\ncontract ProofOfExistence3 {\r\n\r\n  mapping (bytes32 => bool) private proofs;\r\n  \r\n  // store a proof of existence in the contract state\r\n  function storeProof(bytes32 proof) \r\n    internal \r\n  {\r\nproofs[proof]=true;\r\n  }\r\n  \r\n  // calculate and store the proof for a document\r\n  function notarize(string memory document) \r\n    public \r\n  { \r\n        bytes32 proof = proofFor(document);\r\n        storeProof(proof);\r\n  }\r\n  \r\n  // helper function to get a document's keccak256 hash\r\n  function proofFor(string memory document) \r\n    pure \r\n    private \r\n    returns (bytes32) \r\n  {\r\n   return sha256(abi.encodePacked(document));\r\n\r\n  }\r\n  \r\n  // check if a document has been notarized\r\n  function checkDocument(string memory document) \r\n    public \r\n    view \r\n    returns (bool) \r\n  {\r\n    bytes32 proof = proofFor(document);\r\n\r\n    return hasProof(proof);\r\n  }\r\n\r\n  // returns true if proof is stored\r\n  function hasProof(bytes32 proof) \r\n    internal \r\n    view \r\n    returns(bool) \r\n  {\r\nif(proofs[proof]==true){\r\n  return true;\r\n}\r\nelse {\r\n  return false;\r\n\r\n}\r\n  }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"to-be-completed/ProofOfExistence3.sol": {
				"ProofOfExistence3": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "string",
									"name": "document",
									"type": "string"
								}
							],
							"name": "checkDocument",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "document",
									"type": "string"
								}
							],
							"name": "notarize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"to-be-completed/ProofOfExistence3.sol\":27:1097  contract ProofOfExistence3 {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"to-be-completed/ProofOfExistence3.sol\":27:1097  contract ProofOfExistence3 {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"to-be-completed/ProofOfExistence3.sol\":27:1097  contract ProofOfExistence3 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"to-be-completed/ProofOfExistence3.sol\":27:1097  contract ProofOfExistence3 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x53fb9233\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7183616c\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_6:\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_9:\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_15:\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_11:\n      stop\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n    tag_10:\n        /* \"to-be-completed/ProofOfExistence3.sol\":798:802  bool */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":815:828  bytes32 proof */\n      dup1\n        /* \"to-be-completed/ProofOfExistence3.sol\":831:849  proofFor(document) */\n      tag_18\n        /* \"to-be-completed/ProofOfExistence3.sol\":840:848  document */\n      dup4\n        /* \"to-be-completed/ProofOfExistence3.sol\":831:839  proofFor */\n      tag_19\n        /* \"to-be-completed/ProofOfExistence3.sol\":831:849  proofFor(document) */\n      jump\t// in\n    tag_18:\n        /* \"to-be-completed/ProofOfExistence3.sol\":815:849  bytes32 proof = proofFor(document) */\n      swap1\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":865:880  hasProof(proof) */\n      tag_20\n        /* \"to-be-completed/ProofOfExistence3.sol\":874:879  proof */\n      dup2\n        /* \"to-be-completed/ProofOfExistence3.sol\":865:873  hasProof */\n      tag_21\n        /* \"to-be-completed/ProofOfExistence3.sol\":865:880  hasProof(proof) */\n      jump\t// in\n    tag_20:\n        /* \"to-be-completed/ProofOfExistence3.sol\":858:880  return hasProof(proof) */\n      swap2\n      pop\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":712:886  function checkDocument(string memory document) \r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n    tag_16:\n        /* \"to-be-completed/ProofOfExistence3.sol\":376:389  bytes32 proof */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":392:410  proofFor(document) */\n      tag_23\n        /* \"to-be-completed/ProofOfExistence3.sol\":401:409  document */\n      dup3\n        /* \"to-be-completed/ProofOfExistence3.sol\":392:400  proofFor */\n      tag_19\n        /* \"to-be-completed/ProofOfExistence3.sol\":392:410  proofFor(document) */\n      jump\t// in\n    tag_23:\n        /* \"to-be-completed/ProofOfExistence3.sol\":376:410  bytes32 proof = proofFor(document) */\n      swap1\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":421:438  storeProof(proof) */\n      tag_24\n        /* \"to-be-completed/ProofOfExistence3.sol\":432:437  proof */\n      dup2\n        /* \"to-be-completed/ProofOfExistence3.sol\":421:431  storeProof */\n      tag_25\n        /* \"to-be-completed/ProofOfExistence3.sol\":421:438  storeProof(proof) */\n      jump\t// in\n    tag_24:\n        /* \"to-be-completed/ProofOfExistence3.sol\":305:444  function notarize(string memory document) \r... */\n      pop\n      pop\n      jump\t// out\n        /* \"to-be-completed/ProofOfExistence3.sol\":509:659  function proofFor(string memory document) \r... */\n    tag_19:\n        /* \"to-be-completed/ProofOfExistence3.sol\":591:598  bytes32 */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":617:651  sha256(abi.encodePacked(document)) */\n      0x02\n        /* \"to-be-completed/ProofOfExistence3.sol\":641:649  document */\n      dup3\n        /* \"to-be-completed/ProofOfExistence3.sol\":624:650  abi.encodePacked(document) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_27:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":624:650  abi.encodePacked(document) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"to-be-completed/ProofOfExistence3.sol\":624:650  abi.encodePacked(document) */\n      swap1\n      0x40\n      mstore\n        /* \"to-be-completed/ProofOfExistence3.sol\":617:651  sha256(abi.encodePacked(document)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_30:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_30)\n    tag_32:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":617:651  sha256(abi.encodePacked(document)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"to-be-completed/ProofOfExistence3.sol\":617:651  sha256(abi.encodePacked(document)) */\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"to-be-completed/ProofOfExistence3.sol\":617:651  sha256(abi.encodePacked(document)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":610:651  return sha256(abi.encodePacked(document)) */\n      swap1\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":509:659  function proofFor(string memory document) \r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"to-be-completed/ProofOfExistence3.sol\":930:1094  function hasProof(bytes32 proof) \r... */\n    tag_21:\n        /* \"to-be-completed/ProofOfExistence3.sol\":1003:1007  bool */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":1034:1038  true */\n      0x01\n        /* \"to-be-completed/ProofOfExistence3.sol\":1019:1038  proofs[proof]==true */\n      iszero\n      iszero\n        /* \"to-be-completed/ProofOfExistence3.sol\":1019:1025  proofs */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":1019:1032  proofs[proof] */\n      dup1\n        /* \"to-be-completed/ProofOfExistence3.sol\":1026:1031  proof */\n      dup5\n        /* \"to-be-completed/ProofOfExistence3.sol\":1019:1032  proofs[proof] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"to-be-completed/ProofOfExistence3.sol\":1019:1038  proofs[proof]==true */\n      iszero\n      iszero\n      eq\n        /* \"to-be-completed/ProofOfExistence3.sol\":1016:1089  if(proofs[proof]==true){\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"to-be-completed/ProofOfExistence3.sol\":1051:1055  true */\n      0x01\n        /* \"to-be-completed/ProofOfExistence3.sol\":1044:1055  return true */\n      swap1\n      pop\n      jump(tag_35)\n        /* \"to-be-completed/ProofOfExistence3.sol\":1016:1089  if(proofs[proof]==true){\r... */\n    tag_36:\n        /* \"to-be-completed/ProofOfExistence3.sol\":1078:1083  false */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":1071:1083  return false */\n      swap1\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":930:1094  function hasProof(bytes32 proof) \r... */\n    tag_35:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"to-be-completed/ProofOfExistence3.sol\":165:246  function storeProof(bytes32 proof) \r... */\n    tag_25:\n        /* \"to-be-completed/ProofOfExistence3.sol\":236:240  true */\n      0x01\n        /* \"to-be-completed/ProofOfExistence3.sol\":222:228  proofs */\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":222:235  proofs[proof] */\n      dup1\n        /* \"to-be-completed/ProofOfExistence3.sol\":229:234  proof */\n      dup4\n        /* \"to-be-completed/ProofOfExistence3.sol\":222:235  proofs[proof] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"to-be-completed/ProofOfExistence3.sol\":222:240  proofs[proof]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"to-be-completed/ProofOfExistence3.sol\":165:246  function storeProof(bytes32 proof) \r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158205b2ea376e70c2894eabf957319d015230d7b2a6d55df02947d072dc916a43a8264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806353fb92331461003b5780637183616c1461010e575b600080fd5b6100f46004803603602081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101c9565b604051808215151515815260200191505060405180910390f35b6101c76004803603602081101561012457600080fd5b810190808035906020019064010000000081111561014157600080fd5b82018360208201111561015357600080fd5b8035906020019184600183028401116401000000008311171561017557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101e8565b005b6000806101d583610202565b90506101e081610313565b915050919050565b60006101f382610202565b90506101fe81610354565b5050565b60006002826040516020018082805190602001908083835b6020831061023d578051825260208201915060208101905060208303925061021a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106102a45780518252602082019150602081019050602083039250610281565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156102e6573d6000803e3d6000fd5b5050506040513d60208110156102fb57600080fd5b81019080805190602001909291905050509050919050565b60006001151560008084815260200190815260200160002060009054906101000a900460ff161515141561034a576001905061034f565b600090505b919050565b600160008083815260200190815260200160002060006101000a81548160ff0219169083151502179055505056fea265627a7a723158205b2ea376e70c2894eabf957319d015230d7b2a6d55df02947d072dc916a43a8264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53FB9233 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x7183616C EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D5 DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 PUSH2 0x313 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE DUP2 PUSH2 0x354 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2A4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x34A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x34F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 JUMPDEST 0x2E LOG3 PUSH23 0xE70C2894EABF957319D015230D7B2A6D55DF02947D072D 0xC9 AND LOG4 GASPRICE DUP3 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1070:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:1070:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806353fb92331461003b5780637183616c1461010e575b600080fd5b6100f46004803603602081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101c9565b604051808215151515815260200191505060405180910390f35b6101c76004803603602081101561012457600080fd5b810190808035906020019064010000000081111561014157600080fd5b82018360208201111561015357600080fd5b8035906020019184600183028401116401000000008311171561017557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101e8565b005b6000806101d583610202565b90506101e081610313565b915050919050565b60006101f382610202565b90506101fe81610354565b5050565b60006002826040516020018082805190602001908083835b6020831061023d578051825260208201915060208101905060208303925061021a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106102a45780518252602082019150602081019050602083039250610281565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156102e6573d6000803e3d6000fd5b5050506040513d60208110156102fb57600080fd5b81019080805190602001909291905050509050919050565b60006001151560008084815260200190815260200160002060009054906101000a900460ff161515141561034a576001905061034f565b600090505b919050565b600160008083815260200190815260200160002060006101000a81548160ff0219169083151502179055505056fea265627a7a723158205b2ea376e70c2894eabf957319d015230d7b2a6d55df02947d072dc916a43a8264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53FB9233 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x7183616C EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D5 DUP4 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 PUSH2 0x313 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3 DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE DUP2 PUSH2 0x354 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x23D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2A4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x34A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x34F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 JUMPDEST 0x2E LOG3 PUSH23 0xE70C2894EABF957319D015230D7B2A6D55DF02947D072D 0xC9 AND LOG4 GASPRICE DUP3 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "27:1070:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:1070:0;;;;;;;;;;;;;;;;;;;;;;;;712:174;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;712:174:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;712:174:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;712:174:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;712:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;712:174:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;305:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;305:139:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;305:139:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;305:139:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;305:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;305:139:0;;;;;;;;;;;;;;;:::i;:::-;;712:174;798:4;815:13;831:18;840:8;831;:18::i;:::-;815:34;;865:15;874:5;865:8;:15::i;:::-;858:22;;;712:174;;;:::o;305:139::-;376:13;392:18;401:8;392;:18::i;:::-;376:34;;421:17;432:5;421:10;:17::i;:::-;305:139;;:::o;509:150::-;591:7;617:34;641:8;624:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;624:26:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;624:26:0;;;617:34;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;617:34:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;617:34:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;617:34:0;;;;;;;;;;;;;;;;610:41;;509:150;;;:::o;930:164::-;1003:4;1034;1019:19;;:6;:13;1026:5;1019:13;;;;;;;;;;;;;;;;;;;;;:19;;;1016:73;;;1051:4;1044:11;;;;1016:73;1078:5;1071:12;;930:164;;;;:::o;165:81::-;236:4;222:6;:13;229:5;222:13;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;165:81;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "190200",
								"executionCost": "232",
								"totalCost": "190432"
							},
							"external": {
								"checkDocument(string)": "infinite",
								"notarize(string)": "infinite"
							},
							"internal": {
								"hasProof(bytes32)": "997",
								"proofFor(string memory)": "infinite",
								"storeProof(bytes32)": "20962"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1097,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "MSTORE"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1097,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205b2ea376e70c2894eabf957319d015230d7b2a6d55df02947d072dc916a43a8264736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "53FB9233"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "7183616C"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1097,
											"name": "REVERT"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "JUMPDEST"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP3"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DIV"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MUL"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MLOAD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MSTORE"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP4"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP3"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MSTORE"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP4"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP3"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP3"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "JUMPDEST"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MLOAD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP3"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ISZERO"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ISZERO"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ISZERO"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ISZERO"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MSTORE"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "ADD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "MLOAD"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "DUP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SUB"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "RETURN"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP3"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DIV"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "MUL"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "MLOAD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "MSTORE"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP4"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP3"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "MSTORE"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP4"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP3"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP3"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "STOP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "JUMPDEST"
										},
										{
											"begin": 798,
											"end": 802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 815,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 831,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 840,
											"end": 848,
											"name": "DUP4"
										},
										{
											"begin": 831,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 831,
											"end": 849,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 831,
											"end": 849,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 831,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 815,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 815,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 865,
											"end": 880,
											"name": "JUMPDEST"
										},
										{
											"begin": 858,
											"end": 880,
											"name": "SWAP2"
										},
										{
											"begin": 858,
											"end": 880,
											"name": "POP"
										},
										{
											"begin": 858,
											"end": 880,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP2"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "SWAP1"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 886,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 392,
											"end": 410,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 401,
											"end": 409,
											"name": "DUP3"
										},
										{
											"begin": 392,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 392,
											"end": 410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 410,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 392,
											"end": 410,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 410,
											"name": "SWAP1"
										},
										{
											"begin": 376,
											"end": 410,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 438,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 432,
											"end": 437,
											"name": "DUP2"
										},
										{
											"begin": 421,
											"end": 431,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 421,
											"end": 438,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 421,
											"end": 438,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 421,
											"end": 438,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 509,
											"end": 659,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 509,
											"end": 659,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 641,
											"end": 649,
											"name": "DUP3"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "MLOAD"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "DUP3"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "MLOAD"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "DUP4"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "SWAP2"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 624,
											"end": 650,
											"name": "MSTORE"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP3"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP4"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP2"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP4"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SUB"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP2"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP6"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "GAS"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "STATICCALL"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP2"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP3"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP2"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 617,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 610,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 610,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 509,
											"end": 659,
											"name": "SWAP2"
										},
										{
											"begin": 509,
											"end": 659,
											"name": "SWAP1"
										},
										{
											"begin": 509,
											"end": 659,
											"name": "POP"
										},
										{
											"begin": 509,
											"end": 659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "ISZERO"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "ISZERO"
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 1026,
											"end": 1031,
											"name": "DUP5"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "MSTORE"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "MSTORE"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "KECCAK256"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "SLOAD"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "EXP"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "DIV"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "ISZERO"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "ISZERO"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1016,
											"end": 1089,
											"name": "ISZERO"
										},
										{
											"begin": 1016,
											"end": 1089,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1016,
											"end": 1089,
											"name": "JUMPI"
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1044,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1044,
											"end": 1055,
											"name": "JUMP"
										},
										{
											"begin": 1016,
											"end": 1089,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1016,
											"end": 1089,
											"name": "JUMPDEST"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1083,
											"name": "SWAP1"
										},
										{
											"begin": 1071,
											"end": 1083,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "JUMPDEST"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "SWAP2"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 930,
											"end": 1094,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 165,
											"end": 246,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 165,
											"end": 246,
											"name": "JUMPDEST"
										},
										{
											"begin": 236,
											"end": 240,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 222,
											"end": 228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 229,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "KECCAK256"
										},
										{
											"begin": 222,
											"end": 235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "EXP"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "DUP2"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "SLOAD"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "DUP2"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "MUL"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "NOT"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "AND"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "DUP4"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "ISZERO"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "ISZERO"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "MUL"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "OR"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "SSTORE"
										},
										{
											"begin": 222,
											"end": 240,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 246,
											"name": "POP"
										},
										{
											"begin": 165,
											"end": 246,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkDocument(string)": "53fb9233",
							"notarize(string)": "7183616c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"}],\"name\":\"checkDocument\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"}],\"name\":\"notarize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"to-be-completed/ProofOfExistence3.sol\":\"ProofOfExistence3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"to-be-completed/ProofOfExistence3.sol\":{\"keccak256\":\"0xfcf0fd541a55fd69dd3feddbbd05b77d23e9a278e7b14195794b59fc4f9fdd34\",\"urls\":[\"bzz-raw://e478994028318c69eb0516761276e2cd79d4641a69d192733175c42dacc18419\",\"dweb:/ipfs/QmW7sbs7b85Ex6n6U5mpge3PgGv5gkkiEoCPgNccBpmhT6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "to-be-completed/ProofOfExistence3.sol:ProofOfExistence3",
								"label": "proofs",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"to-be-completed/ProofOfExistence3.sol": {
				"ast": {
					"absolutePath": "to-be-completed/ProofOfExistence3.sol",
					"exportedSymbols": {
						"ProofOfExistence3": [
							87
						]
					},
					"id": 88,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "ProofOfExistence3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "proofs",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "61:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "70:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "61:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "81:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "219:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 10,
															"name": "proofs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "222:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 12,
														"indexExpression": {
															"argumentTypes": null,
															"id": 11,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "229:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "222:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "236:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "222:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "222:18:0"
											}
										]
									},
									"documentation": null,
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeProof",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "proof",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "185:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "184:15:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:0:0"
									},
									"scope": 87,
									"src": "165:81:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "364:80:0",
										"statements": [
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"name": "proof",
														"nodeType": "VariableDeclaration",
														"scope": 32,
														"src": "376:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 22,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 25,
															"name": "document",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "401:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 24,
														"name": "proofFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "392:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "392:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "376:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 29,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 28,
														"name": "storeProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "421:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "421:17:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notarize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "document",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "323:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:24:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:0:0"
									},
									"scope": 87,
									"src": "305:139:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "604:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 43,
																	"name": "document",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "641:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 41,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "624:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "624:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "624:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 40,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "617:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "617:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 39,
												"id": 46,
												"nodeType": "Return",
												"src": "610:41:0"
											}
										]
									},
									"documentation": null,
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proofFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "document",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "527:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 34,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "526:24:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "591:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 37,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "590:9:0"
									},
									"scope": 87,
									"src": "509:150:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "808:78:0",
										"statements": [
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"name": "proof",
														"nodeType": "VariableDeclaration",
														"scope": 65,
														"src": "815:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 55,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "815:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 58,
															"name": "document",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "840:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "proofFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "831:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "831:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "815:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 62,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 61,
														"name": "hasProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "865:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (bytes32) view returns (bool)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "865:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 64,
												"nodeType": "Return",
												"src": "858:22:0"
											}
										]
									},
									"documentation": null,
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDocument",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "document",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "735:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "735:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "734:24:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "797:6:0"
									},
									"scope": 87,
									"src": "712:174:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1013:81:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 73,
															"name": "proofs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1019:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 75,
														"indexExpression": {
															"argumentTypes": null,
															"id": 74,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1026:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1019:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1034:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1019:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "1066:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1078:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 72,
															"id": 82,
															"nodeType": "Return",
															"src": "1071:12:0"
														}
													]
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "1016:73:0",
												"trueBody": {
													"id": 80,
													"nodeType": "Block",
													"src": "1039:20:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1051:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 72,
															"id": 79,
															"nodeType": "Return",
															"src": "1044:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasProof",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"name": "proof",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "947:15:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1003:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1002:6:0"
									},
									"scope": 87,
									"src": "930:164:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 88,
							"src": "27:1070:0"
						}
					],
					"src": "0:1099:0"
				},
				"id": 0
			}
		}
	}
}